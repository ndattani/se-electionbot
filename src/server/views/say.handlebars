{{> navigation routes=data/routes password=data/password path=data/path instances=data/instances }}

<h1 class="fs-4">{{{heading}}}</h1>

{{> breadcrumbs current=current }}

<form method="post">

    {{{data/statusText}}}

    <textarea type="text" name="message" id="message" aria-label="message" placeholder="message" maxlength="500"></textarea>

    <input type="hidden" name="password" value="{{data/password}}" />

    <div class="form-controls mt-4">
        <button class="btn btn-primary">Send</button>
    </div>
</form>

<div class="chat-transcript">
    <h3 class="fs-5">Recent Chat Messages</h3>
    <table class="table-small">
        <thead>
            <tr>
                <th>Message ID</th>
                <th>Date</th>
                <th>Username</th>
                <th>Message</th>
            </tr>
        </thead>
        <tbody id="transcript-messages"></tbody>
    </table>
</div>

<script>
(() => {
    const msgField = document.getElementById('message');
    document.body.addEventListener('click', ({ target }) => {
        const { dataset: { messageId } } = target;

        if(!messageId) return;

        msgField.value = `:${messageId} ${msgField.value.replace(/^:\d+\s*/, '')}`;
    }, false);

    const realtime = new EventSource(`${location.origin}/realtime?type=message`);
    realtime.addEventListener("message", (event) => {
        const { data } = event;
        const message = JSON.parse(data);

        /** @type {HTMLTableSectionElement|undefined} */
        const messagesTableBody = document.getElementById("transcript-messages");
        if(!messagesTableBody) return;

        const {
            chatDomain,
            chatUserId,
            date,
            messageId,
            messageHtml,
            username
        } = message;

        const row = document.createElement("tr");

        const idCell = document.createElement("td");
        idCell.classList.add("cursor-pointer");
        idCell.dataset.messageId = messageId;
        idCell.title = "click to reply to this message";
        idCell.textContent = messageId;

        const dateCell = document.createElement("td");
        dateCell.title = "click to open the message";

        const dateLink = document.createElement("a");
        dateLink.href = `https://chat.${chatDomain}/transcript/message/${messageId}`;
        dateLink.target = "_blank";

        const dateSpan = document.createElement("span");
        dateSpan.classList.add("relativetime");
        dateSpan.title = new Date(date).toISOString();

        const userCell = document.createElement("td");

        const userLink = document.createElement("a");
        userLink.href = `https://chat.${chatDomain}/users/${chatUserId}`;
        userLink.target = "_blank";
        userLink.textContent = username;

        const msgCell = document.createElement("td");
        msgCell.innerHTML = messageHtml;

        dateLink.append(dateSpan);
        dateCell.append(dateLink);
        userCell.append(userLink);
        row.append(idCell, dateCell, userCell, msgCell);

        messagesTableBody.prepend(row);

        updateRelativeDates();
    });

    realtime.addEventListener("error", (event) => {
        console.debug(event);
        realtime.close();
    });
})();
</script>